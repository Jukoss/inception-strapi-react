import { Observable } from 'rxjs';
import { combineEpics } from 'redux-observable';
import axios from 'axios';

import { mergeMap } from 'rxjs/operators';
import { ofType } from 'redux-observable';

import { serialize, handleError } from './../../api_helper';

import * as actionsTypes from './constants';

import { receiveLogIn, cancelLogIn } from './actions';

const logInEpic = (action$) => action$.pipe(
    ofType(actionsTypes.LOG_IN),
    mergeMap(action => {
      const { url, data } = action.payload;
      return Observable.fromPromise(axios.post(url, serialize(data)))
        .catch(handleError)
        .map((result) => (
          result && result.data ? receiveLogIn(result.data) : cancelLogIn(result)
        ))
    }
    )
  );



export default combineEpics(
  logInEpic
);