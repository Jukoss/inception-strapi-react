import React, { Fragment } from 'react';
import PropTypes from 'prop-types';
import { push } from 'react-router-redux';
import { connect } from 'react-redux';

import _ from 'lodash';


import LinearProgress from '@material-ui/core/LinearProgress';

import { userMe } from './../Login/actions';

export default (Component) => {
  class Inception extends React.Component {
    componentWillMount() {
      const { token, user } = this.props.inception;

      if (token && _.isEmpty(user)) {
        this.props.userMe();
      }

      if (!token && !this.isSomeLoginPage) {
        this.props.push('/login');
      } else if (token && this.isSomeLoginPage) {
        this.props.push('/');
      }
    }

    componentWillReceiveProps(nextProps) {
      const { token } = this.props.inception;

      if (token && !nextProps.inception.token && !this.isSomeLoginPage) {
        this.props.push('/login');
      }
    }

    get isSomeLoginPage() {
      return this.props.location.pathname.match(/^\/login\/*/);
    }

    render() {
      const { preloader } = this.props.inception;

      return (
        <Fragment>
          {preloader ? <LinearProgress /> : null }
          <Component {...this.props} />
        </Fragment>
      )
    }
  }

  Inception.propTypes = {
    push: PropTypes.func.isRequired,
    inception: PropTypes.instanceOf(Object),
  };

  function mapStateToProps(state) {
    return {
      inception: state.inception
    };
  }

  return connect(mapStateToProps, { push, userMe })(Inception);
}

